=begin
  https://projecteuler.net/problem=2
  Each new term in the Fibonacci sequence is generated by adding the previous two terms.
  By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
  By considering the terms in the Fibonacci sequence whose values do not exceed four million,
  find the sum of the even-valued terms.
=end

# Calculates the sum of even Fibonacci numbers up to a given limit.
# @param limit [Integer] The ceiling.
# @return [Integer] The sum.
def fun(limit)
  total = 0 # to store the sum
  i, j = 1, 2 # to compute the sequence

  while i < limit # while the nth Fibonacci number is less than the limit
    if i.even? # if the nth Fibonacci number is even
      total += i # add it to our total
    end
    i, j = j, i + j # then continue iterating through the sequence
  end

  total
end

puts fun(4 * 10 ** 6) # Ruby uses `**` for exponentiation, not `^`
